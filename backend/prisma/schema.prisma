generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  SELLER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products  Product[] @relation("SellerProducts")
  cartItems CartItem[]
  wishlist  Wishlist[]
  orders    Order[]   @relation("CustomerOrders")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  category    String
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sellerId    Int
  seller      User     @relation("SellerProducts", fields: [sellerId], references: [id])

  cartItems   CartItem[]
  wishlist    Wishlist[]
  orderItems  OrderItem[]
}

model CartItem {
  id        Int    @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int

  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Wishlist {
  id        Int    @id @default(autoincrement())
  userId    Int
  productId Int

  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id        Int        @id @default(autoincrement())
  userId    Int
  status    OrderStatus @default(PENDING)
  total     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user      User        @relation("CustomerOrders", fields: [userId], references: [id])
  items     OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float

  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
